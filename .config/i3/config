client.focused          #4C7899 #285577 #FFFFFF #376FDC   #d79921
#client.focused         #4C7899 #285577 #FFFFFF #376FDC   #4C7899
client.focused_inactive #333333 #5F676A #FFFFFF #484E50   #5F676A
client.unfocused        #333333 #222222 #888888 #292D2E   #222222
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #636363

#bar {
#  colors {
#    background #000000
#    statusline #FFFFFF
#    separator  #666666
#
#    focused_workspace  #4C7899 #3bc833 #FFFFFF
#    active_workspace   #333333 #222222 #FFFFFF
#    inactive_workspace #333333 #222222 #888888
#    urgent_workspace   #2F343A #900000 #FFFFFF
#    binding_mode       #2F343A #900000 #FFFFFF
#  }
#}

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $mod1 Mod1
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 16

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 19

# Before i3 v4.8, we used to recommend this one as the default:
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font pango:Droid Sans Mono 11.3
#font pango:DejaVu Sans Mono, Terminus Bold Semi-Condensed 15
# font pango:Terminus 19px


# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec st

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run -fn 'pango:DejaVu Sans Mono i5'
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -i -fn 'DejaVu Sans Mono-13'"
bindsym $mod+d exec "dmenu_run -hp 'spotify,discord,alacritty,chromium,twitch-dmenu,weather' -i -fn 'DejaVu Sans MOno-13'"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
#bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# switch between 2 worksapces
# If press a mod + number
workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.``
bindsym h resize shrink width 5 px or 5 ppt
bindsym j resize grow height 5 px or 5 ppt
bindsym k resize shrink height 5 px or 5 ppt
bindsym l resize grow width 5 px or 5 ppt
# bindsym semicolon resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
bindsym Left resize shrink width 5 px or 5 ppt
bindsym Down resize grow height 5 px or 5 ppt
bindsym Up resize shrink height 5 px or 5 ppt
bindsym Right resize grow width 5 px or 5 ppt

# back to normal: Enter or Escape or $mod+r
bindsym Return mode "default"
bindsym Escape mode "default"
bindsym $mod+q mode "default"
}

bindsym $mod+q mode "resize"
# finds out, if available)

#bar {
#  status_command i3status
#    workspace_buttons yes
#	position top
#}



### i3bar

bar {
status_command i3blocks -c ~/.config/i3blocks/i3blocks.conf
tray_output primary
workspace_buttons yes
position top
colors {
background #000000
statusline #FFFFFF
separator  #666666

focused_workspace  #4C7899 #d79921 #000000
#focused_workspace  #4C7899 #4BC51D #000000
active_workspace   #333333 #222222 #FFFFFF
inactive_workspace #333333 #222222 #c5c5c5
urgent_workspace   #2F343A #900000 #FFFFFF
binding_mode       #2F343A #900000 #FFFFFF
}
#mode dock
#hidden_state show
modifier none
#state toogle 

}

bindsym $mod+Shift+f bar mode toggle

### Cycle through active workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev


### Auto start "programs"
exec --no-startup-id [ $(ps h -C nm-applet | wc -l) = 0 ] && nm-applet
exec --no-startup-id [ $(ps h -C blueman-applet | wc -l) = 0 ] && blueman-applet

# Spotify - need to install spotifywm from aur
for_window [class="Spotify"] move container to workspace 8
#assign [class="^[sS]potify*"] $ws8
#bindsym $mod+8 workspace $ws8; exec [ $(ps h -C spotify | wc -l) = 0 ] && /usr/bin/spotify -s;
#bindsym $mod+8 exec [ $(ps h -C spotify | wc -l) = 0 ] && /usr/bin/spotify -s;

#focus_on_window_activation [class="Spotify"] none 

#bindsym $mod+8 [class="Firefox"] move workspace $ws8
#for_window [class="Spotify"] move workspace $ws8; workspace --no-auto-back-and-forth $ws8
#for_window [class="[sS]potify*"] move to workspace $ws8

#workspace [--no-auto-back-and-forth] $ws8
#for_window [title="Spotify"] move to workspace $ws8 -- azert nem lehet ezt hasznalni mert atrakja, ha a chromba

# Firefox
#bindsym $mod+1 workspace $ws1; exec [ $(ps h -C firefox | wc -l) = 0 ] && /usr/bin/firefox -s;
#assign [class="Firefox"] $ws1
#exec firefox

# Chrome
#bindsym $mod+1 workspace $ws1; exec [ $(ps h -C chromium | wc -l) = 0 ] && /usr/bin/chromium -s;
assign [class="Chromium"] $ws1
#exec chromium --restore-last-session

# Discord
#bindsym $mod+9 workspace $ws9; exec [ $(ps h -C discord | wc -l) = 0 ] && /usr/bin/discord -s;
assign [class="discord"] $ws9

# Skype
assign [class="Skype"] $ws7

# Steam 
assign [class="Steam"] $ws6

# Viber 
assign [class="Viber"] $ws7

# Borders
gaps inner 10
gaps outer 0
smart_gaps on
smart_borders on
for_window [class="^.*"] border pixel 3
title_align center

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && pkill -SIGRTMIN+12 i3block #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && pkill -SIGRTMIN+12 i3block #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && pkill -SIGRTMIN+12 i3block #decrease sound volume toggle # mute sound

#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- #decrease sound volume
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ #increase sound volume
#bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master toggle #mute sound


# Radio 1
#bindsym $mod+0x5b exec $HOME/script/radio1/radio1-start.sh
#bindsym $mod+0x5d exec $HOME/script/radio1/radio1-stop.sh
bindsym $mod+bracketleft exec "~/scripts/radio1/radio1-start.sh" 
bindsym $mod+bracketright exec "~/scripts/radio1/radio1-stop.sh" 

#&& pkill -SIGRTMIN+13 i3block

#&& notify-send -t 2000 "Radio 1" "stop"

# i3/config
#bindsym $mod+0 workspace $ws10; exec [ $( ps h | grep ~/.config/i3/config ) = 0 ] && exec st vim ~/.config/i3/config -s ;
#bindsym $mod+0 workspace $ws10; st vim ~/.config/i3/config;
#bindsym $mod+0 workspace $ws10; exec /usr/bin/vim  /home/zgft/a;
#bindsym $mod+0 workspace $ws10; exec [ $(ps h -C vim | wc -l) != 0 ] && vim -s;

#Background
#exec_always --no-startup-id feh --bg-fill ~/Pictures/wallpaper-own/campfire.jpg
#exec_always --no-startup-id feh --bg-fill ~/Pictures/milky_way.png
#exec --no-startup-id feh --bg-fill ~/Pictures/wallpaper/green_leaves/green-leaf.png

# polybar
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Screen lock
#exec_always --no-startup-id xautolock -time 15 -locker "i3lock -i ~/Pictures/waterdrop.png"
#exec_always --no-startup-id [ $(ps aux | grep -i "screensaver.sh" | grep -v "grep" | wc -l) = 0 ] && /home/zgft/Dropbox/Projects/screensaver/screensaver.sh
###exec_always  xautolock -time 15 -locker ~/scripts/i3lock.sh

### Touchpad
#exec_always --no-startup-id [ $(ps h -C fusuma | wc -l) = 0 ] && fusuma
#exec_always --no-startup-id [ $(ps h -C gebaard | wc -l) = 0 ] && gebaard -b
exec_always --no-startup-id [ $(ps h -C libinput-gestures | wc -l) = 0 ] && libinput-gestures

# Touchapd disable while typing
exec_always --no-startup-id [ $(ps h -C syndaemon | wc -l) = 0 ] && syndaemon -i 0.35
#sudo modprobe -r psmouse && sudo modprobe psmouse

### redshift
#exec_always --no-startup-id [ $(ps h -C redshift-gtk | wc -l) = 0 ] && /usr/bin/redshift-gtk


### caffeine
#exec_always --no-startup-id [ $(ps h -C caffeine | wc -l) = 0 ] && caffeine

###Dropbox
#exec_always --no-startup-id [ $(ps h -C dropbox | wc -l) = 0 ] && dropbox

### Screenshot
# Desktop screenshot
bindsym Print exec "scrot ~/Pictures/Screenshot/$(date --iso-8601='seconds').png -m -e 'xclip -selection image/png < $f' && notify-send -t 3000 'Printscreen' 'Fullscreen'"
# Choose window
# bindsym --release Mod1+Sys_Req exec "import -window `xwininfo | awk '/.*Window id:.*/ {print $4}'` ~/Pictures/Screensho/$(date --iso-8601='seconds').png && notify-send -t 3000 'Printscreen' 'Clipboard'"
# Selection screenshot
bindsym --release Shift+Print exec "scrot ~/Pictures/Screenshot/$(date --iso-8601='seconds').png -s -e 'xclip -selection c -t image/png < $f' && notify-send -t 3000 'Printscreen' 'Selected'"
# Active window
bindsym --release $mod+Print exec "scrot ~/Pictures/Screenshot/$(date --iso-8601='seconds').png -u -e -b 'xclip -selection image/png < $f' && notify-send -t 3000 'Printscreen' 'Active window'"

### Keybindings ###
bindsym $mod+o exec bash ~/scripts/openpdf.sh


### kdeconnect-indicator
exec_always --no-startup-id [ $(ps aux | grep -i "phone_battery.sh" | grep -v "grep" | wc -l) = 0 ] && /home/zgft/script/phone/phone_battery.sh

### Spotify -global shortcuts 
#(i have no media pause, next, prev button thats why i did this):
#Play/Pause toggle with $mod (Windows key) + Mute button:
bindsym --release $mod+XF86AudioMute exec "if ! dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause; then spotify;  fi"

#previous
bindsym --release $mod+XF86AudioLowerVolume exec "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"
#Next:
bindsym --release $mod+XF86AudioRaiseVolume exec "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"
# Up move 
#bindcode 44 exec "xdotool key Up"
# Down move
#keysym --release j exec "xdotool key Down"


#bindsym $mod+p exec ~/scripts/twitch-dmenu

#bindsym $mod+r exec st -e ranger
bindsym $mod+r exec alacritty -e ranger

# Change themes
#bindsym --release $mod+equal exec "wal --theme base16-one -l"
#bindsym --release $mod+minus exec "wal --theme base16-gruvbox-medium"

#bindsym --release $mod+XF86MonBrightnessUp exec "wal --theme base16-one -l -e && xsettingsd -c ~/.xsettings-light"
bindsym --release $mod+XF86MonBrightnessUp exec $HOME/scripts/light-theme

#bindsym --release $mod+XF86MonBrightnessDown exec "wal --theme base16-gruvbox-medium -e && xsettingsd -c ~/.xsettings-dark" 
bindsym --release $mod+XF86MonBrightnessDown exec $HOME/scripts/dark-theme

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 4 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 4 # decrease screen brightness

# Shutdown 
bindsym $mod+Shift+Delete exec ~/scripts/shutdown

#Caps_lock
bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3block

# Screenlayout
#exec xrandr --output eDP1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI1 --mode 1680x1050 --pos 1920x0 --rotate normal 
exec_always xrandr --output HDMI1 --auto --right-of eDP1
workspace 1 output eDP1
workspace 2 output eDP1
workspace 3 output eDP1
workspace 4 output eDP1
workspace 5 output eDP1
workspace 6 output HDMI1
workspace 7 output HDMI1
workspace 8 output HDMI1
workspace 9 output HDMI1
workspace 10 output HDMI1



#bindsym $mod+y scratchpad show
#bindsym $mod+t move scratchpad

bindsym $mod+u exec "if [ $( ps h -C st | grep vimwiki -c ) = 0 ]; then st -n vimwiki vim Notes/allnotes.wiki; fi" ; [instance="vimwiki"] scratchpad show ; [instance="vimwiki"] move position center
bindsym $mod+m exec "if [ $( ps h -C alacritty | grep bc -c ) = 0 ]; then alacritty --class calc -e bc -lq; fi" ; [instance="calc"] scratchpad show ; [instance="calc"] move position center
bindsym $mod+n exec "if [ $( ps h -C alacritty | grep trans -c ) = 0 ]; then alacritty --class translator -e trans -shell :hu -speak; fi" ; [instance="translator"] scratchpad show ; [instance="translator"] move position center
bindsym $mod+shift+n exec "if [ $( ps h -C alacritty | grep trans -c ) = 0 ]; then alacritty --class translator -e trans -shell :en -p; fi" ; [instance="translator"] scratchpad show ; [instance="translator"] move position center
bindsym $mod+i exec "if [ $( ps h -C alacritty | grep ncmpcpp -c ) = 0 ]; then alacritty --class ncmpcpp -e ncmpcpp; fi" ; [instance="ncmpcpp"] scratchpad show ; [instance="ncmpcpp"] move position center

for_window [instance="vimwiki"] floating enable
for_window [instance="vimwiki"] resize set 1000 800
for_window [instance="vimwiki"] move scratchpad

for_window [instance="calc"] floating enable
for_window [instance="calc"] resize set 600 600
for_window [instance="calc"] move scratchpad

for_window [instance="translator"] floating enable
for_window [instance="translator"] resize set 800 600
for_window [instance="translator"] move scratchpad

for_window [instance="ncmpcpp"] floating enable
for_window [instance="ncmpcpp"] resize set 1000 600
for_window [instance="ncmpcpp"] move scratchpad

for_window [title="videonewsboat"] floating enable, move position 1300 730
for_window [title="videonewsboat"] resize set 0 350, sticky enable
no_focus [title="videonewsboat"] 
for_window [title="almaskorte*"] floating enable, move position 1300 730

for_window [title="twitch_stream"] floating enable, move position 1300 730, resize set 0 350
#for_window [title="twitch_stream"] resize set 0 350

assign [class="q[bB]ittorrent"] $ws6
for_window [title="youtube_fhd"] floating enable, move position 1300 730
for_window [title="youtube_fhd"] resize set 0 350, sticky enable




# Redshift
#exec_always --no-startup-id pkill redshift ;  redshift -r -l 49.4979:19.0402 -t 6700:3800


## Keyboards swap
#bindsym $mod+Control+space exec pkill -SIGRTMIN+14 i3block

# Hatterkep
#exec_always --no-startup-id [ $(ps h -C earth.sh | wc -l) = 0 ] && ~/scripts/earth.sh
#exec_always --no-startup-id [ $(ps h -C earth-flat.sh | wc -l) = 0 ] && ~/scripts/earth-flat.sh
#exec_always --no-startup-id ~/scripts/earth.sh

exec_always feh --bg-scale ~/Pictures/wallhaven-39l7d3_1920x1080.png

# youtube a
bindsym $mod+y exec "ytfzf -mD"
bindsym $mod+shift+y exec "kill $(ps aux | grep 'mpv --no-video https://www.youtube.com' | grep -v grep | awk '{print $2}')"

# Sticky mod = Always on top on all workspace
bindsym $mod+Shift+s sticky toggle
exec_always ~/scripts/keyboard.sh

